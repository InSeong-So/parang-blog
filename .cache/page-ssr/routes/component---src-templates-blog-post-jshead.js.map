{"version":3,"file":"component---src-templates-blog-post-jshead.js","mappings":"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","sources":["webpack://blog/./.yarn/cache/camelcase-npm-5.3.1-5db8af62c5-e6effce26b.zip/node_modules/camelcase/index.js","webpack://blog/../src/image-utils.ts","webpack://blog/../src/components/hooks.ts","webpack://blog/../src/components/picture.tsx","webpack://blog/../src/components/placeholder.tsx","webpack://blog/../src/components/main-image.tsx","webpack://blog/../src/components/layout-wrapper.tsx","webpack://blog/../src/components/gatsby-image.server.tsx","webpack://blog/../src/components/static-image.server.tsx","webpack://blog/./src/components/bio.js","webpack://blog/./src/components/layout.js","webpack://blog/./src/components/seo.js","webpack://blog/./src/templates/blog-post.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={['auto', 'webp', 'avif']}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  let header;\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\">\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\" />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["l","d","u","message","warn","a","b","images","map","image","src","width","join","filename","lastIndexOf","dot","slice","ext","length","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","generateImageSource","setDefaultDimensions","fit","options","_generateImageSource","pluginName","reporter","backgroundColor","placeholderURL","formatFromFilename","size","has","add","imgDimensions","DEFAULT_BREAKPOINTS","Object","entries","filter","_","erroneousUserDimensions","dim","outputPixelDensities","dedupeAndSortDensities","DEFAULT_PIXEL_DENSITIES","getDimensionsAndAspectRatio","calculated","fixedDimension","sizes","densities","density","presentationWidth","originalWidth","presentationHeight","unscaledWidth","calculateImageSizes","sources","W","getSizes","imageSizes","forEach","imageSrc","Boolean","find","img","unscaled","result","fallback","srcSet","getSrcSet","push","type","imageProps","placeholder","values","from","concat","sort","sortNumeric","min","includes","dimensions","Number","MAX_SAFE_INTEGER","widthOption","heightOption","imageAspectRatio","max","GATSBY___IMAGE","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","_node$childImageSharp","getImage","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","baseUrl","urlBuilder","sourceWidth","sourceHeight","c","props","_breakpoints","EVERY_BREAKPOINT","defaultImage","artDirected","media","process","env","NODE_ENV","console","output","source","loading","alt","shouldLoad","decoding","undefined","i","s","React","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","Picture","displayName","exact","arrayOf","oneOfType","e","Placeholder","_Picture$propTypes","propName","componentName","MainImage","dangerouslySetInnerHTML","__html","style","paddingTop","maxWidth","display","role","position","children","Fragment","Sizer","NativeScriptLoading","str","replace","B","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","r","gatsbyImageIsInstalled","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","removeNewLines","createElement","LayoutWrapper","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","transform","willChange","getMainProps","GatsbyImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","number","Y","checkDimensionProps","validLayouts","StaticImage","Bio","data","author","site","siteMetadata","social","name","summary","twitter","Link","Layout","location","title","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Helmet","Seo","description","lang","meta","metaDescription","defaultTitle","content","property","defaultProps","object","BlogPostTemplate","post","markdownRemark","siteTitle","previous","next","frontmatter","excerpt","date","html","flexWrap","justifyContent","listStyle","padding","fields","slug","pageQuery"],"sourceRoot":""}